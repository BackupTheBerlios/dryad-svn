AC_INIT([dryad], [M2], [dryad-bugs@rtlad.org])

AC_ARG_ENABLE([paranoid-shutdown], [AC_HELP_STRING([--enable-paranoid-shutdown], [force the signal handler to wait for the analysis core to exit before quiting.])], [AC_DEFINE([PARANOID_SHUTDOWN], [1], [Use paranoid shutdown])])

AM_CONFIG_HEADER(config.h)
AM_INIT_AUTOMAKE(AC_PACKAGE_NAME, AC_PACKAGE_VERSION)

AC_LANG_CPLUSPLUS
AC_PROG_CXX
AM_PROG_LIBTOOL

AC_MSG_CHECKING([if $CXX accepts -fstack-protector])
oldcflags=$CXXFLAGS
CXXFLAGS="$CXXFLAGS -fstack-protector"
worked=no
AC_COMPILE_IFELSE([AC_LANG_PROGRAM([#include <stdio.h>],[fprintf(stderr, "Hello, World!\n")])],[worked=[yes]],[CXXFLAGS=$oldcflags])
AC_MSG_RESULT([$worked])

AC_CHECK_LIB([pcre], [pcre_exec],, [AC_MSG_FAILURE([Dryad requires libpcre!])])
AC_CHECK_LIB([pthread], [pthread_mutex_lock],, [AC_MSG_FAILURE([Dryad requires pthreads!])])
AC_CHECK_LIB([ltdl], [lt_dlopen],, [AC_MSG_FAILURE([Dryad requires Libtool's libtld!])])
AC_CHECK_LIB([esmtp], [smtp_errno],, [AC_MSG_FAILURE([Dryad requires libesmtp!])])
AC_CHECK_LIB([lrsp], [lrsp_client_free],, [AC_MSG_FAILURE([Dryad requires liblrsp!])])

AC_OUTPUT(Makefile src/Makefile src/plugins/Makefile databases/Makefile docs/Makefile)
